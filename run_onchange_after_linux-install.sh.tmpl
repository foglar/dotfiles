#!/bin/bash

{{ if eq .chezmoi.os "linux" }}
{{ if eq .chezmoi.osRelease.id "arch" }}
DISTRO="arch"
{{ elif eq .chezmoi.osRelease.id "fedora" }}
DISTRO="fedora"
{{ else }}
DISTRO="unkown"
{{ end }}
{{ end }}

if [ ! -f "$HOME/.config/dotfiles/scripts/global.sh" ]; then
    echo "Could not load global.sh, you've done something very bad."
    echo "Try rerunning 'chezmoi update'"
    exit 1
fi

source "$HOME/.config/dotfiles/scripts/global.sh"

if [ $(id -u) = 0 ]; then
  echo "${error_box}Please don't run this script as sudo, it will ask for permission by itself"
  exit 1
fi

skip_installation=$(check_value "skip_script")
if [ "$skip_installation" == "true" ]; then
    echo "${error_box}Skipping script (if you don't expect this behaviour, edit your config file in ~/.config/scripts/config.json)$reset"
    exit 1
fi

packages=$(return_value "category" "${output_config_file}")
if [ "$packages" = "minimal" ]; then
    echo "${info_box}Minimal setup"
    cp "${app_list_dir}minimal.yaml" "${app_install_file}" -v
elif [ "$packages" = "base" ]; then
    echo "${info_box}Base setup"
    cp "${app_list_dir}base.yaml" "${app_install_file}" -v
elif [ "$packages" = "full" ]; then
    echo "${info_box}Full setup"
    cp "${app_list_dir}full.yaml" "${app_install_file}" -v
else
    echo "${error_box}No valid setup"
    echo "${error_box}Edit ${output_config_file} or run setup script."
fi

# think about how to manage packages lists to install on different distros

echo "${info_box}Installation of applications"
if [[ "${DISTRO}" -eq "arch" ]]; then
  echo "${blue}ó°£‡ Arch$reset detected"
    
    if [[ $(check_value "blackarch_repo" "${output_config_file}") == "true" ]]; then
      echo "${info_box} Updating repositories$reset"
      sudo pacman -Syu --noconfirm
      echo "${info_box} Adding blackarch repositories$reset"
      curl -O https://blackarch.org/strap.sh 
      echo 26849980b35a42e6e192c6d9ed8c46f0d6d06047 strap.sh | sha1sum -c 
      chmod +x strap.sh
      sudo ./strap.sh
      sudo pacman -Syy --noconfirm
    fi

    if [[ $(is_blackarch_repository) == "true" ]]; then
      echo "${info_box}Succesfully added blackarch repositories"
      echo "${info_box}Installing paru aur helper from blackarch repositories"
      sudo pacman -S paru --noconfirm --needed
      installer="paru"
    fi
    
    if ! pkg_installed paru; then
      echo "${error_box}Failed to install paru from repo, installing ${blue}paru${reset} aur helper manually"
      sh "${scripts_path}install_aur.sh" "paru"
    fi
    
    if ! pkg_installed paru; then
      if [[ $(is_blackarch_repository) == "true" ]]; then
        echo "${error_box}Failed to install paru even manually, installing ${blue}yay${reset} from blackarch repositories"
        sudo pacman -S yay --noconfirm --needed
        installer="yay"
      else
        if ! pkg_installed yay; then
          echo "${error_box}Failed to install yay, installing ${blue}yay${reset} aur helper manually instead"
          sh "${scripts_path}install_aur.sh" "yay"
          installer="yay"
        fi
      fi
    fi
    
    if ! pkg_installed yay; then
      echo "${error_box}Failed to install yay, installing only basic repo packages with pacman, install aur helper yourself"
      installer="pacman"
    fi
    
    {{ range .packages.linux -}}
      if $installer == "paru"; then
        $installer -S --noconfirm --needed --skipreview {{ . | quote }}
      elif $installer == "yay"; then
        $installer -S --noconfirm --needed {{ . | quote }}
      else
        sudo $installer -S --noconfirm --needed {{ . | quote }}
      fi
    {{ end -}}
    
else
  echo "${DISTRO} is unsupproted distribution, feel free to implement this yourself and contribute to this project."
fi 
    
if [[ $(return_value "scripts_after" "${output_config_file}") != "null" ]]; then
      scripts=$(return_value "scripts_after")
      echo "${scripts_after[@]}"
fi


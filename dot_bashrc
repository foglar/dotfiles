#
# ~/.bashrc
#

if type pfetch >/dev/null 2>&1
then
  pfetch
fi

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Tmux
#[[ -z "$TMUX" ]] && exec tmux

alias ls='ls --color=auto'
alias grep='grep --color=auto'
PS1='[\u@\h \W]\$ '

# All aliases stored here
source ~/.bash_aliases

eval "$(oh-my-posh init bash --config ~/.config/oh-my-posh/kali.omp.json)"
eval "$(zoxide init bash)"
eval "$(fzf --bash)"

# Use bash-completion, if available
[[ $PS1 && -f /usr/share/bash-completion/bash_completion ]] && \
    . /usr/share/bash-completion/bash_completion

if [ -f "/home/foglar/.config/fabric/fabric-bootstrap.inc" ]; then . "/home/foglar/.config/fabric/fabric-bootstrap.inc"; fi

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/foglar/.local/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/foglar/.local/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/foglar/.local/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/foglar/.local/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

export GOPATH=~/Programming/Go/
export GOOS=linux
export GOARCH=amd64

export EDITOR=nvim
export GRUB_BTRFS_GRUB_DIRNAME="/boot/grub/"

export PICO_SDK_PATH=~/Programming/Projects/pico-sdk/
export TERMINAL=/usr/bin/kitty

export ANDROID_HOME=$HOME/Android/Sdk
export PATH=$PATH:$ANDROID_HOME/platform-tools

export PATH=$PATH:~/.local/bin/:~/.console-ninja/.bin/:${HOME}/.local/share/JetBrains/Toolbox/scripts

PATH=~/.console-ninja/.bin:$PATH
